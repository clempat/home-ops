---
version: "3"
tasks:
  deps:
    desc: Install/Upgrade Ansible deps
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-galaxy install -r requirements.yml --roles-path ~/.ansible/roles --force
      - ansible-galaxy collection install -r requirements.yml --collections-path ~/.ansible/collections --force
    preconditions:
      - test -f "{{.ANSIBLE_DIR}}/requirements.yml"
  networking:
    desc: Provision network for Homelab
    dir: "{{.TERRAFORM_DIR}}/unifi"
    cmds:
      - op run --env-file=.env terraform init
      - op run --env-file=.env terraform apply
  create:
    desc: Provision proxmox VMs for the cluster
    dir: "{{.TERRAFORM_DIR}}/proxmox"
    cmds:
      - op run --env-file=.env terraform init
      - op run --env-file=.env terraform apply
  nuke:
    desc: Provision proxmox VMs for the cluster
    dir: "{{.TERRAFORM_DIR}}/proxmox"
    cmds:
      - op run --env-file=.env terraform destroy
      - rm -rf {{.ROOT_DIR}}/.kubeconfig
  install:
    desc: Prepare the vms os
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook -i {{.ANSIBLE_DIR}}/inventory/hosts.yml {{.ANSIBLE_DIR}}/playbooks/cluster-prepare.yml
      - ansible-playbook -i {{.ANSIBLE_DIR}}/inventory/hosts.yml {{.ANSIBLE_DIR}}/playbooks/cluster-install.yml

  bootstrap:
    desc: bootstrap k8s apps
    dir: "{{.ROOT_DIR}}"
    env:
      KUBECONFIG: "{{.ROOT_DIR}}/kubeconfig"
    cmds:
      - kubectl create namespace argocd --dry-run=client --output=yaml | kubectl apply -f -
      - cd {{.KUBERNETES_DIR}}/bootstrap/argocd && ./apply.sh
      - cd {{.KUBERNETES_DIR}}/bootstrap/app-of-apps && ./apply.sh
