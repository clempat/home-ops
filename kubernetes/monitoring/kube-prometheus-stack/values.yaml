---
kube-prometheus-stack:
  cleanPrometheusOperatorObjectNames: true
  grafana:
    enabled: false
    forceDeployDashboards: true
  prometheus:
    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: networking-authelia@kubernetescrd
        hajimari.io/enable: "true"
        hajimari.io/icon: simple-icons:prometheus
        hajimari.io/appName: Prometheus
        hajimari.io/info: Open-source monitoring system with a dimensional data model, flexible query language, efficient time series database and modern alerting approach
    prometheusSpec:
      retention: 2d
      retentionSize: 6GB
      enableAdminAPI: true
      walCompression: true
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: longhorn
            resources:
              requests:
                storage: 15Gi
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
  alertmanager:
    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: networking-authelia@kubernetescrd
        hajimari.io/enable: "true"
        hajimari.io/icon: alert-decagram-outline
        hajimari.io/appName: alertmanager
        hajimari.io/info: Handles alerts sent by client applications such as the Prometheus server
    config:
      global:
        resolve_timeout: 5m
      route:
        group_by: ["alertname", "job"]
        group_wait: 1m
        group_interval: 10m
        repeat_interval: 12h
        receiver: pushover
        routes:
          - receiver: healthchecksio
            group_wait: 0s
            group_interval: 1m
            repeat_interval: 1m
            matchers:
              - alertname = "Watchdog"
          - receiver: "null"
            matchers:
              - alertname = "InfoInhibitor"
          - receiver: pushover
            matchers:
              - severity =~ "critical|alert"
            continue: true
    alertmanagerSpec:
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: longhorn
            resources:
              requests:
                storage: 1Gi
  kube-state-metrics:
    metricLabelsAllowlist:
      - "pods=[*]"
      - "deployments=[*]"
      - "persistentvolumeclaims=[*]"
    prometheus:
      monitor:
        enabled: true
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels: ["__meta_kubernetes_pod_node_name"]
            targetLabel: kubernetes_node
  kubelet:
    enabled: true
    serviceMonitor:
      metricRelabelings:
        # Remove duplicate metrics
        - sourceLabels: ["__name__"]
          regex: "(apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|authentication_token|cadvisor_version|container_blkio|container_cpu|container_fs|container_last|container_memory|container_network|container_oom|container_processes|container|csi_operations|disabled_metric|get_token|go|hidden_metric|kubelet_certificate|kubelet_cgroup|kubelet_container|kubelet_containers|kubelet_cpu|kubelet_device|kubelet_graceful|kubelet_http|kubelet_lifecycle|kubelet_managed|kubelet_node|kubelet_pleg|kubelet_pod|kubelet_run|kubelet_running|kubelet_runtime|kubelet_server|kubelet_started|kubelet_volume|kubernetes_build|kubernetes_feature|machine_cpu|machine_memory|machine_nvm|machine_scrape|node_namespace|plugin_manager|prober_probe|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|storage_operation|volume_manager|volume_operation|workqueue)_(.+)"
          action: keep
        - sourceLabels: ["node"]
          targetLabel: instance
          action: replace
  kubeApiServer:
    enabled: true
    serviceMonitor:
      metricRelabelings:
        # Remove duplicate metrics
        - sourceLabels: ["__name__"]
          regex: "(aggregator_openapi|aggregator_unavailable|apiextensions_openapi|apiserver_admission|apiserver_audit|apiserver_cache|apiserver_cel|apiserver_client|apiserver_crd|apiserver_current|apiserver_envelope|apiserver_flowcontrol|apiserver_init|apiserver_kube|apiserver_longrunning|apiserver_request|apiserver_requested|apiserver_response|apiserver_selfrequest|apiserver_storage|apiserver_terminated|apiserver_tls|apiserver_watch|apiserver_webhooks|authenticated_user|authentication|disabled_metric|etcd_bookmark|etcd_lease|etcd_request|field_validation|get_token|go|grpc_client|hidden_metric|kube_apiserver|kubernetes_build|kubernetes_feature|node_authorizer|pod_security|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|serviceaccount_legacy|serviceaccount_stale|serviceaccount_valid|watch_cache|workqueue)_(.+)"
          action: keep
        # Remove high cardinality metrics
        - sourceLabels: ["__name__"]
          regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
          action: drop
        - sourceLabels: ["__name__"]
          regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
          action: drop
  kubeControllerManager:
    enabled: true
    serviceMonitor:
      enabled: true
      https: true
      insecureSkipVerify: true
  kubeScheduler:
    enabled: true
    serviceMonitor:
      metricRelabelings:
        # Remove duplicate metrics
        - sourceLabels: ["__name__"]
          regex: "(apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|authenticated_user|authentication|disabled_metric|go|hidden_metric|kubernetes_build|kubernetes_feature|leader_election|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scheduler|scrape_duration|scrape_samples|scrape_series|workqueue)_(.+)"
          action: keep
  prometheus-node-exporter:
    tolerations:
      - effect: "NoExecute"
        operator: "Exists"
      - effect: "NoSchedule"
        operator: "Exists"
  kubeProxy:
    enabled: true
  kubeEtcd:
    enabled: true
